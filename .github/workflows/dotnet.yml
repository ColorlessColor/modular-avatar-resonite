# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  RPC_SERVER_SRC: Resonite~/ResoniteHook

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x 
        
    - uses: nuget/setup-nuget@v2
      with:
        nuget-version: '5.x'

    - name: Restore dependencies
      run: dotnet restore "${{ env.RPC_SERVER_SRC }}" -v normal

    - name: Restore dependencies (.NET 4.7.2)
      run: nuget restore -ConfigFile "${{ env.RPC_SERVER_SRC }}/ResoPuppetSchema/packages.config" -PackagesDirectory "${{ env.RPC_SERVER_SRC }}/packages" -Verbosity normal

    - run: dir "${{ env.RPC_SERVER_SRC }}/packages"

    - name: Cache resonite
      id: cache-resonite
      uses: actions/cache/restore@v4
      with:
        path: "C:\\Program Files (x86)\\Steam\\steamapps\\common\\Resonite\\Resonite_Data\\Managed"
        key: resonite

    - name: Cache steamcmd
      id: cache-steamcmd
      if: steps.cache-resonite.outputs.cache-hit != 'true'
      uses: actions/cache/restore@v4
      with:
        path: c:\steamcmd
        key: steamcmd

    - name: Setup steamcmd
      if: steps.cache-steamcmd.outputs.cache-hit != 'true' && steps.cache-resonite.outputs.cache-hit != 'true'
      run: |
        cd c:\
        Invoke-WebRequest https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip -OutFile c:\steamcmd.zip
        Expand-Archive c:\steamcmd.zip -Force
        New-Item -ItemType Directory -Path "C:\Program Files (x86)\Steam\steamapps\common\Resonite\Resonite_Data\Managed"
        dir c:\steamcmd

    - name: Update steamcmd
      if: steps.cache-resonite.outputs.cache-hit != 'true'
      run: |
        $ErrorAction = "Ignore"
        # run updater first
        c:\steamcmd\steamcmd +quit
        # steamcmd exits with a nonzero error code even when successful, suppress the error
        Exit 0


    - name: Install resonite
      id: install-resonite
      if: steps.cache-resonite.outputs.cache-hit != 'true'
      run: |
        c:\steamcmd\steamcmd +force_install_dir "C:\Program Files (x86)\Steam\steamapps\common\Resonite\Resonite_Data\Managed" +login ${{ secrets.STEAMUSER }} ${{ secrets.STEAMPASS }} +app_update 2519830 +quit

    - name: Build
      run: cd "${{ env.RPC_SERVER_SRC }}"; dotnet build --no-restore --verbosity normal
    - name: Test
      run: cd "${{ env.RPC_SERVER_SRC }}"; dotnet test --no-build --verbosity normal

    - name: Save steamcmd cache
      if: steps.install-resonite.outcome == 'success'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-steamcmd.outputs.cache-primary-key }}
        path: c:\steamcmd

    - name: Save resonite cache
      if: steps.install-resonite.outcome == 'success'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-resonite.outputs.cache-primary-key }}
        path: "C:\\Program Files (x86)\\Steam\\steamapps\\common\\Resonite\\Resonite_Data\\Managed"
    
